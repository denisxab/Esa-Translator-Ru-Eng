{"Првиет": [0, {"Првиет": ["Привет", "Правит", "Приветь"]}], "мир": [1], "|Првиет|": [0, {"Првиет": ["|Привет", "|Првиет", "|Правит", "|Приветь"]}], "Привет": [1], "как": [1], "дела": [1], "умнек": [0, {"умнек": ["умник", "умнее", "умнак"]}], "Приве": [0, {"Приве": ["Привет", "Привел", "Привез", "Привёз", "Привес", "Праве", "Привит", "Прове"]}], "|Приве|": [0, {"Приве": ["|Привет", "|Приве", "|Привел", "|Привес"]}], "ghfdbkmyj": [0, {"ghfdbkmyj": ["правильно", "правильное", "правильной", "правельно"]}], "|ghfdbkmyj|": [0, {"ghfdbkmyj": ["|правильно", "|правильное", "|правильной", "|правельно"]}], "правильно": [1], "yfijk": [0, {"yfijk": ["нашел", "нашол", "нашло", "наше"]}], "Пр": "PR", "При": "When", "Привет ": "Hi ", "Привет п": "Hi p", "Привет пр": "Hi PR", "Привет предо": "Hi before", "Привет пред": "Hey pred", "Привет предок": "Hi ancestor", "Привет пре": "Hi pre", "Gh": "Gh", "Ghbd": "Ghbd", "Ghb": "Ghb", "G": "G", "при": "when", "пр": "PR", "п": "p", "приве": "privé", "прив": "Pref", "привет": "hi", "привет ": "hi ", "привет п": "hi p", "привет па": "hi PA", "привет п ": "привет п ", "привет п  ": "hi p ", "Tk_t9.py:113:4: R0201: Method could be a function (no-self-use)": "Tk_t9.py:113:4: R0201: Method could be a function (no-self-use)", "Tk_t9.py:113:4: R0201: Method could be a function (no-self-use) ": "Tk_t9.пы:113:4: R0201: способ может быть функция (без самостоятельного использования) ", "Tk_t9.py:13:0: W0611: Unused import pyperclip (unused-import)": "Tk_t9.пы:13:0: W0611: неиспользованный импорт pyperclip (неиспользованный-импорт)", "main.py:523:0: C0330: Wrong hanging indentation (remove 13 spaces).": "main.py:523:0: C0330: Wrong hanging indentation (remove 13 spaces).", "main.py:523:0: C0330: Wrong hanging indentation (remove 13 spaces). ": "главная.пы:523:0: C0330: неправильно висячего отступа (удалить 13 мест). ", "main.py:27:0: R0205: Class 'Translete_Elemint' inherits from object, can be safely removed ": "главная.пы:27:0: R0205: класс 'Translete_Elemint' наследует от объекта, могут быть безопасно удалены ", "main.py:27:0: R0902: Too many instance attributes (": "главная.пы:27:0: R0902: слишком много атрибутов экземпляра (", "main.py:41:8: W0702: No exception type(s) specified (bare-except)": "главная.пы:41:8: W0702: нет тип исключения(ов), указанного (голый-за исключением)", "main.py:166:56: W0108: Lambda may not be necessary (unnecessary-lambda)": "main.py:166:56: W0108: Lambda may not be necessary (unnecessary-lambda)", "main.py:166:56: W0108: Lambda may not be necessary (unnecessary-lambda) ": "главная.пы:166:56: W0108: лямда может и не надо (лишнее-лямбда) ", "ecessary-lambda) ": "ecessary-лямда) ", "\r\nmain.py:268:26: W0613: Unused argument 'event' (unused-argument)": "\r\nmain.py:268:26: W0613: Unused argument 'event' (unused-argument)", "\r\nmain.py:268:26: W0613: Unused argument 'event' (unused-argument) ": "\nглавная.пы:268:26: W0613: неиспользуемый аргумент 'событие' (неиспользованный-аргумент) ", "Transleter ": "Transleter ", "Class 'ORC' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)": "Class 'ORC' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)", "Class 'ORC' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance) ": "Наследует класс 'орк' от объекта, могут быть безопасно удалены из базы в питон3 (бесполезно-объект-наследство) ", "Useless super delegation in method '__init__' ": "Бесполезные супер делегации в метод__init и__' ", "Instance of 'ORC' has no 'Windows' member": "Экземпляр 'орк' имеет член не \"Окна\" ", "Module 'cv2' has no 'resize' member": "Модуль 'cv2' нет 'изменить размер' член", "main.py:306:30: E1101: Module 'cv2' has no 'resize' member (no-member)\r\nmain.py:308:30: E1101: Module 'cv2' has no 'GaussianBlur' member (no-member)\r\nmain.py:311:27: E1101: Module 'cv2' has no 'error' member (no-member)": "главная.пы:306:30: E1101: модуль 'cv2' нет 'изменить размер' член (не член) \nглавная.пы:308:30: E1101: модуль 'cv2' нет 'GaussianBlur' член (не член) \nглавная.пы:311:27: E1101: модуль 'cv2' нет 'ошибка' член (не член)", "main.py:397:16: W0612: Unused variable 'x' (unused-variable)": "главная.пы:397:16: W0612: неиспользуемая переменная 'х' (неиспользованный-переменная)", "\r\nmain.py:431:8: W0201: Attribute 'location_window' defined outside __init__ ": "\nглавная.пы:431:8: W0201: атрибут 'location_window' определенными пределами __инит__ ", "\r\nmain.py:431:8: W0201: Attribute 'location_window' defined outside __init__ main.py:510:15: C0121: Comparison to False should be 'not expr' (singleton-comparison)\r\nmain.py:519:17: C0121: Comparison to False should be 'expr' (singleton-comparison)": "\nглавная.пы:431:8: W0201: атрибут 'location_window' определенными пределами __инит__ главная.пы:510:15: C0121: сравнение с false должно быть выражение' (синглтон-сравнение) \nглавная.пы:519:17: C0121: сравнение с false должно быть 'выражение' (синглтон-сравнение)", "main.py:510:15: C0121: Comparison to False should be 'not expr' (singleton-comparison)\r\nmain.py:519:17: C0121: Comparison to False should be 'expr' (singleton-comparison)": "главная.пы:510:15: C0121: сравнение с false должно быть выражение' (синглтон-сравнение) \nглавная.пы:519:17: C0121: сравнение с false должно быть 'выражение' (синглтон-сравнение)", "mmain.py:504:8: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\r\nain.py:510:15: C0121: Comparison to False should be 'not expr' (singleton-comparison)\r\nmain.py:519:17: C0121: Comparison to False should be 'expr' (singleton-comparison)": "главным.пы:504:8: R1710: либо все операторы return в функции должны возвращать выражение, или никто из них не должен. (непоследовательно-возвращение заявления) \n- Айн.пы:510:15: C0121: сравнение с false должно быть выражение' (синглтон-сравнение) \nглавная.пы:519:17: C0121: сравнение с false должно быть 'выражение' (синглтон-сравнение)", "main.py:504:8: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\r\n": "главная.пы:504:8: R1710: либо все операторы return в функции должны возвращать выражение, или никто из них не должен. (непоследовательно-возвращение заявления) \n", "\r\nmain.py:542:20: R1705: Unnecessary \"elif\" after \"return\" (no-else-return)": "\nглавная.пы:542:20: R1705: ненужные \"Элиф\" после \"возвращения\" (нет-еще-возвращение)", "\r\nmain.py:574:21: C0121: Comparison to False should be 'not expr' (singleton-comparison)": "\nглавная.пы:574:21: C0121: сравнение с false должно быть выражение' (синглтон-сравнение)", "\r\nmain.py:582:12: I1101: Module 'win32api' has no 'LoadKeyboardLayout' member, but source is unavailable. Consider adding this module to extension-pkg-whitelist if you want to perform analysis based on run-time introspection of living objects. (c-extension-no-member)\r\nmain.py:586:12: I1101: Module 'win32api' has no 'LoadKeyboardLayout' member, but source is unavailable. Consider adding this module to extension-pkg-whitelist if you want to perform analysis based on run-time introspection of living objects. (c-extension-no-member)\r\n": "\nглавная.пы:582:12: I1101: модуль 'win32api' нет 'LoadKeyboardLayout' член, но источник недоступен. Попробуйте добавить этот модуль расширения-ПКГ-белый если вы хотите выполнить анализ, основанный на времени выполнения самоанализа живых объектов. (с-расширением-не-членов) \nглавная.пы:586:12: I1101: модуль 'win32api' нет 'LoadKeyboardLayout' член, но источник недоступен. Попробуйте добавить этот модуль расширения-ПКГ-белый если вы хотите выполнить анализ, основанный на времени выполнения самоанализа живых объектов. (с-расширением-не-членов) \n", "main.py:590:4: R0201: Method could be a function (no-self-use)\n": "главная.пы:590:4: R0201: способ может быть функция (без самостоятельного использования)\n", "main.py:590:4: R0201: Method could be a function (no-self-use)\r\n": "главная.пы:590:4: R0201: способ может быть функция (без самостоятельного использования) \n", "main.py:10:0: W0611: Unused partial imported from functools (unused-import)": "главная.пы:10:0: W0611: неиспользованный частично импортируется из functools (неиспользованный-импорт)", "main.py:21:0: C0411: third party import \"import mss.tools\" should be placed before \"from Check_class import Check_class\" (wrong-import-order)\r\nmain.py:22:0: C0411: third party import \"import cv2\" should be placed before \"from Check_class import Check_class\" (wrong-import-order)\r\nmain.py:23:0: C0411: third party import \"import numpy\" should be placed before \"from Check_class import Check_class\" (wrong-import-order)\r\nmain.py:25:0: C0411: third party import \"import pytesseract\" should be placed before \"from Check_class import Check_class\" (wrong-import-order)\r\n": "главная.пы:21:0: C0411: импорт третья сторона \"импорт ПСС.средства\" должен быть установлен до \"от Check_class импорт Check_class\" (неправильно-импорт-порядок) \nглавная.пы:22:0: C0411: импорт третья сторона \"импорт cv2\" должен быть установлен до \"от импортных Check_class Check_class\" (неправильно-импорт-порядок) \nглавная.пы:23:0: C0411: импорт третья сторона \"импорт библиотеки numpy\" должен быть установлен до \"от импортных Check_class Check_class\" (неправильно-импорт-порядок) \nглавная.пы:25:0: C0411: импорт третья сторона \"импорт pytesseract\" должен быть установлен до \"от импортных Check_class Check_class\" (неправильно-импорт-порядок) \n", "main.py:19:0: C0411: third party import \"from PIL import Image, ImageTk\" should be placed before \"import Tk_t9\" (wrong-import-order)": "main.py:19:0: C0411: third party import \"from PIL import Image, ImageTk\" should be placed before \"import Tk_t9\" (wrong-import-order)", "main.py:19:0: C0411: third party import \"from PIL import Image, ImageTk\" should be placed before \"import Tk_t9\" (wrong-import-order) ": "главная.пы:19:0: C0411: третье лицо импорт \"из Пиль импорт изображения, ImageTk\" следует поместить перед \"импорт Tk_t9\" (неправильно-импорт-порядок) ", "import Tk_t9": "import Tk_t9", "\r\nmain.py:30:0: C0413: Import \"import Tk_t9\" should be placed at the top of the module (wrong-import-position)\r\n": "\r\nmain.py:30:0: C0413: Import \"import Tk_t9\" should be placed at the top of the module (wrong-import-position)\r\n", "\r\nmain.py:30:0: C0413: Import \"import Tk_t9\" should be placed at the top of the module (wrong-import-position)\r\n ": "\nглавная.пы:30:0: C0413: импорт \"импорт Tk_t9\" должны быть размещены в верхней части модуля (неправильно-импорт-положение) \n", "main.py:12:0: C0413: Import \"import os\" should be placed at the top of the module (wrong-import-position)": "main.py:12:0: C0413: Import \"import os\" should be placed at the top of the module (wrong-import-position)", "main.py:12:0: C0413: Import \"import os\" should be placed at the top of the module (wrong-import-position) ": "главная.пы:12:0: C0413: импорт \"импорт ОС\" должны быть размещены в верхней части модуля (неправильно-импорт-положение) ", "R0902: ": "R0902: ", "main.py:276:4: E0211: Method has no argument (no-method-argument)": "main.py:276:4: E0211: Method has no argument (no-method-argument)", "main.py:276:4: E0211: Method has no argument (no-method-argument) ": "главная.пы:276:4: E0211: метод не имеет аргументов (не-метод-аргумент) ", "esize()\n\nle, scale p ": "esize()\n\nЛе, шкала п ", "le. scale percent ": "Ле. шкала процентов ", "scale percent ": "шкала процентов ", "шкала процентов ": "шкала процентов ", "шкала процентов  ": "scale percent ", "шкала процентов  п": "scale percent p", "шкала процентов  при": "scale percent at", "шкала процентов  прив": "scale percent Pref", "шкала процентов  приве": "scale percent privè", "шкала процентов  приве ": "scale percent privè ", "шкала процентов  приве у": "the scale of interest are welcome at", "шкала процентов  приве ум": "the scale of interest shows mind", "шкала процентов  приве умнек": "the scale of interest shows umnak", "шкала процентов  приве умне": "scale percent privè be getting smarter", "шкала процентов  приве |умнек|": "scale percent privè |umnak|", "шкала": [1], "процентов": [1], "": [1], "шкала процентов  приве умник": "scale percent Prive nerd", "шкала процентов  приве умник ": "scale percent Prive nerd ", "шкала процентов  приве умник п": "the scale of interest shows smart p", "шкала процентов  приве умник пр": "the scale of interest shows clever PR", "шкала процентов  приве умник прив": "scale percent Pref Pref nerd", "шкала процентов  приве умник приве": "scale percent privè privè nerd", "шкала процентов  приве умник при": "scale percent Prive nerd when", "шкала процентов  приве умник приви": "scale percent privé privée nerd", "шкала процентов  приве умник |приви|": "scale percent nerd privé |privy|", "умник": [1], "приви": [0, {"приви": ["прививки", "приве", "привит", "привил", "прививке", "приво", "привить", "преви", "прави"]}], "шкала процентов  приве умник прививки": "scale percent Prive nerd vaccinations", "куацу": "koitsu", "куацука": "koizuka", "куацука ": "куацука ", " куацука ": " koizuka ", "priginal image's ": "priginal изображения ", "| value along with original ": "| значение наряду с оригинальными ", "<100 downscales the image provided. \n\\/-------------2-------------------\\/\n calculate the width and height of output \n\\/-------------3-------------------\\/\n | import cv2 ": "<100 downscales предоставленного изображения. \n\\/-------------2-------------------\\/\nрассчитать ширину и высоту выходного \n\\/-------------3-------------------\\/\n| импорт cv2 ", "Key assistant ": "Ключ помощник ", "main.py:24:35: C0326: Exactly one space required after comma": "main.py:24:35: C0326: Exactly one space required after comma", "main.py:24:35: C0326: Exactly one space required after comma ": "главная.пы:24:35: C0326: ровно один пробел требуется после запятой ", "main.py:272:4: E0211: Method has no argument (no-method-argument)": "главная.пы:272:4: E0211: метод не имеет аргументов (не-метод-аргумент)", "scale percent value holds the ": "процентное значение имеет ", "MeTOO | ": "МеТоо | ", "| PYCCKMI \n\\/-------------2-------------------\\/\n AHTMACKM \n\\/-------------3-------------------\\/\n ms xable ": "| PYCCKMI \n\\/-------------2-------------------\\/\nAHTMACKM \n\\/-------------3-------------------\\/\nms xable ", "MeTog init v3 ": "MeTog инит В3 ", "g": "г", "gh": "гр", "привет ми": "привет ми", "привет мир ": "привет мир ", "привет мир": "привет мир", "привет мир как": "привет мир как", "привет мир ка": "привет мир ка", "привет мир к": "привет мир к", "ms.xable ": "МС.xable ", "def skrinshot _s class(self, AVTO S=@): ": "деф скриншот класс _с хорошо(самовыдвижение, авто с=@): ", "main.py:319:27: E0602: Undefined variable 'cv2' (undefined-variable)": "main.py:319:27: E0602: Undefined variable 'cv2' (undefined-variable)", "main.py:319:27: E0602: Undefined variable 'cv2' (undefined-variable) ": "главная.пы:319:27: E0602: неопределенная переменная 'cv2' (неопределенная переменная) ", "def exit mS C9 ": "выход деф МС С9 ", "Catching too general exception Exception (broad-except)": "Catching too general exception Exception (broad-except)", "Catching too general exception Exception (broad-except) ": "Ловить слишком общее исключение исключение (широкий-исключено) ", "првиет как дела ": "Privet how are you doing ", "првиет как дела у ": "Privet how ", "првиет как дела у": "Privet how", "првиет как дела у м": "Privet how m", "првиет как дела у мн": "Privet how's mn", "првиет как дела у ме": "Privet how are IU", "првиет как дела у мен": "Privet how are things with me", "првиет как дела у меня": "Privet's going on with me", "=": "="}